{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "June",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#numerics"
		},
		{
			"include": "#types"
		},
		{
			"include": "#identifiers"
		},
		{
			"include": "#line_comment"
		},
		{
			"include": "#block_comment"
		},
		{
			"include": "#operators"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [{
				"name": "keyword.control.june",
				"match": "(r#)?\\b(let|return|if|else|for|in|continue|break|fn|struct|as|impl|public|typeof|import)\\b"
			}, {
				"name": "constant.language.june",
				"match": "\\b(true|false|nil)\\b"
			}, {
				"name": "constant.other.june",
				"match": "(r#)?\\b(self)\\b"
			}]
		},
		"operators": {
			"patterns": [{
				"name": "keyword.operator.arithmetic.june",
				"match": "(\\+=?|-=?|\\/=?|\\*=?|>>=?|<<=?|<=?|>=?|==?|%=?|\\|(\\|)?|&&?|!=?)"
			}]
		},
		"strings": {
			"patterns": [{
				"name": "string.quoted.double.june",
				"begin": "\"",
				"end": "\"",
				"patterns": [{
					"name": "constant.character.escape.june",
					"match": "\\\\u\\{[0-9A-Fa-f]{4}\\}"
				}, {
					"name": "constant.character.escape.june",
					"match": "\\\\x([0-9A-Fa-f]{2})"
				}, {
					"name": "constant.character.escape.june",
					"match": "\\\\[0-9a-zA-Z]"
				}, {
					"begin": "#{",
					"end": "}",
					"patterns": [{
						"include": "$self"
					}]
				}]
			}, {
				"name": "string.quoted.single.june",
				"match": "'([^'\\s]+)'",
				"captures": {
					"1": {
						"patterns": [{
							"name": "constant.character.escape.june",
							"match": "\\\\u\\{[0-9A-Fa-f]{4}\\}"
						}, {
							"name": "constant.character.escape.june",
							"match": "\\\\x([0-9A-Fa-f]{2})"
						}, {
							"name": "constant.character.escape.june",
							"match": "\\\\[0-9a-zA-Z]"
						}]
					}
				}
			}]
		},
		"numerics": {
			"patterns": [{
				"match": "\\b([0-9]+(\\.[0-9]+)?)\\b",
				"captures": {
					"1": {
						"name": "constant.numeric.june"
					}
				}
			}]
		},
		"types": {
			"patterns": [{
				"match": "\\b[A-Z_][A-Z0-9_]*\\b",
				"name": "constant.other.caps.june"
			}, {
				"match": "\\b[A-Z_][a-zA-Z0-9_]*\\b",
				"name": "entity.name.class.june"
			}, {
				"match": "\\b(int|float|string|bool)\\b",
				"name": "entity.name.type.june"
			}]
		},
		"identifiers": {
			"patterns": [{
				"match": "(?=[\\s\\.]*)\\b(((?!func))([a-zA-Z_][a-zA-Z0-9_]*))[\\s]*(?=\\()",
				"captures": {
					"3": {
						"name": "entity.name.function.june"
					}
				}
			}, {
				"match": "struct[\\s]*([a-zA-Z_][a-zA-Z0-9_]*)[\\s]*{",
				"captures": {
					"1": {
						"name": "entity.name.type.struct.june"
					}
				}
			}]
		},
		"line_comment": {
			"comment": "Single-line comment",
			"name": "comment.line",
			"begin": "//",
			"end": "$"
		},
		"block_comment": {
			"comment": "Multi-line comment",
			"name": "comment.block",
			"begin": "/\\*",
			"end": "\\*/",
			"patterns": [
				{
					"include": "#block_comment"
				}
			]
		}
	},
	"scopeName": "source.june"
}